<?xml version="1.0" encoding="UTF-8"?>
<module name="comet-tester"
	   xmlns="urn:ietf:params:xml:ns:yang:yin:1"
	   xmlns:h="http://www.w3.org/1999/xhtml"
	   xmlns:ct="http://cesnet.cz/ns/yang/comet-tester">

  <namespace uri="http://cesnet.cz/ns/yang/comet-tester"/>
  <prefix value="ct"/>

  <import module="ietf-yang-types">
    <prefix value="yang"/>
  </import>

  <import module="ietf-inet-types">
    <prefix value="inet"/>
  </import>

  <!-- Metadata -->
  <organization>
    <text>CESNET, z. s. p. o. </text>
  </organization>
  <contact>
    <text>TBD</text>
  </contact>
  <description>
    <text>
      <h:p>
	This YANG module defines the data model for the Combo Ethernet
	Tester.
      </h:p>
      <h:p>
	TBD - more information.
      </h:p>
    </text>
  </description>
  <revision date="2011-09-20">
    <description>
      <text>Initial revision.</text>
    </description>
  </revision>

  <grouping name="enabled-switch">
    <description>
      <text>
	This grouping defines a switch which is used for
	enabling/disabling individual COMET modules.
      </text>
    </description>
    <leaf name="enabled">
      <type name="boolean"/>
      <default value="true"/>
    </leaf>
  </grouping>

  <grouping name="histogram64">
    <description>
      <text>
	<h:p>This grouping defines reusable contents for
	histograms with 64-bit counters for each bin.</h:p>
	<h:p>Histograms are statistics, hence 'config false'.</h:p>
	<h:p>This grouping is supposed to be used in a container
	representing the entire histogram. Such a container node
	should provide, in its 'description' substatement, parameters
	necessary for interpreting the histogram counts, i. e. at
	least minimum and maximum values and the total number of
	bins.</h:p>
      </text>
    </description>
    <list name="bin">
      <key value="seq-number"/>
      <config value="false"/>
      <max-elements value="256"/>
      <description>
	<text>
	  <h:p>Each entry in this list gives the count of items in a single
	  histogram bin identified by its sequence number.</h:p>
	  <h:p>Maximum number of bins is 256.</h:p>
	  <h:p>Sequence numbers of the entries must be
	  increasing. However, entries for one or more bins may be
	  missing - count of that bin is then considered to be zero.</h:p>
	</text>
      </description>
      <leaf name="seq-number">
	<must
	    condition="not(../preceding-sibling::bin/seq-number &gt;=
		       .) ">
	  <error-message>
	    <value>
	      Histogram bins must be given in an increasing order.
	    </value>
	  </error-message>
	</must>
	<type name="uint8"/>
      </leaf>
      <leaf name="count">
	<description>
	  <text>Number of values in the corresponding histogram
	  bin.</text>
	</description>
	<type name="uint64"/>
      </leaf>
    </list>
  </grouping>
  <container name="comet-testers">
    <list name="comet-tester">
      <key value="interface-id"/>
      <leaf name="interface-id">
        <type name="uint16">
          <range value="0..max"/>
        </type>
      </leaf>
      <container name="statistics">
        <uses name="enabled-switch"/>
        <container name="data">
          <when condition="../enabled = 'true'"/>
          <config value="false"/>
          <leaf name="pkt-sum">
            <mandatory value="true"/>
            <must condition=". = ../pkt-rec + ../pkt-dis"/>
            <description>
              <text>
                Total packet count (received + discarded).
              </text>
            </description>
            <type name="yang:zero-based-counter64"/>
          </leaf>
          <leaf name="pkt-rec">
            <mandatory value="true"/>
            <description>
              <text>
                Counter of received frames.
              </text>
            </description>
            <type name="yang:zero-based-counter64"/>
          </leaf>
          <leaf name="pkt-dis">
            <mandatory value="true"/>
            <description>
              <text>
                Counter of discarded frames.
              </text>
            </description>
            <type name="yang:zero-based-counter64"/>
          </leaf>
          <leaf name="pkt-bo">
            <mandatory value="true"/>
            <description>
              <text>
                Counter of packets causing buffer overflow.
              </text>
            </description>
            <type name="yang:zero-based-counter64"/>
          </leaf>
          <leaf name="pkt-crc">
            <mandatory value="true"/>
            <description>
              <text>
                Counter of packets with CRC error.
              </text>
            </description>
            <type name="yang:zero-based-counter64"/>
          </leaf>
          <leaf name="pkt-mac">
            <mandatory value="true"/>
            <description>
              <text>
                Counter of packets with bad MAC address.
              </text>
            </description>
            <type name="yang:zero-based-counter64"/>
          </leaf>
          <leaf name="pkt-bmtu">
            <mandatory value="true"/>
            <description>
              <text>
                Counter of packets whose size is less than MTU.
              </text>
            </description>
            <type name="yang:zero-based-counter64"/>
          </leaf>
          <leaf name="pkt-omtu">
            <mandatory value="true"/>
            <description>
              <text>
                Counter of packets whose size is greater than MTU.
              </text>
            </description>
            <type name="yang:zero-based-counter64"/>
          </leaf>
          <leaf name="min-size">
            <mandatory value="true"/>
            <must condition=". &lt;= ../max-size"/>
            <description>
              <text>
                Minimum size.
              </text>
            </description>
            <type name="uint32"/>
          </leaf>
          <leaf name="max-size">
            <mandatory value="true"/>
            <description>
              <text>
                Maximum size.
              </text>
            </description>
            <type name="uint32"/>
          </leaf>
          <leaf name="min-delay">
            <mandatory value="true"/>
            <must condition=". &lt;= ../max-delay"/>
            <description>
              <text>
                XGMII minimum delay.
              </text>
            </description>
            <type name="uint64"/>
            <units name="bytes"/>
          </leaf>
          <leaf name="max-delay">
            <mandatory value="true"/>
            <description>
              <text>
                XGMII maximum delay.
              </text>
            </description>
            <type name="uint64"/>
            <units name="bytes"/>
          </leaf>
          <leaf name="avg-bitrate">
            <mandatory value="true"/>
            <description>
              <text>
                Average bitrate.
              </text>
            </description>
            <type name="uint64"/>
            <units name="Mbps"/>
          </leaf>
          <leaf name="avg-pkt-size">
            <mandatory value="true"/>
            <description>
              <text>
                Average packet size.
              </text>
            </description>
            <type name="uint64"/>
            <units name="bytes"/>
          </leaf>
          <container name="packet-sizes">
            <description>
              <text>
                <h:p>Histogram of observed packet sizes.</h:p>
                <h:p>TBD - specify values of histogram parameters.</h:p>
              </text>
            </description>
            <uses name="histogram64"/>
          </container>
          <container name="packet-gaps">
            <description>
              <text>
                <h:p>Histogram of observed interpacket gaps.</h:p>
                <h:p>TBD - specify values of histogram parameters.</h:p>
              </text>
            </description>
            <uses name="histogram64"/>
          </container>
        </container>
      </container>

      <container name="sender">
        <uses name="enabled-switch"/>
        <leaf name="timestamp">
          <description>
            <text>Timestamp of the first packet.</text>
          </description>
          <type name="uint64"/>
          <units name="nanoseconds"/>
        </leaf>
        <leaf name="start-delay">
          <description>
            <text>Delay of the first packet.</text>
          </description>
          <type name="uint64"/>
          <units name="nanoseconds"/>
        </leaf>
        <leaf name="interval">
          <description>
            <text>Time interval between packets.</text>
          </description>
          <type name="uint64"/>
          <units name="nanoseconds"/>
        </leaf>
        <leaf name="copies">
          <description>
            <text>
              Number of copies of each packet.
            </text>
          </description>
          <type name="uint32"/>
        </leaf>
        <leaf name="speed">
          <description>
            <text>Transmission speed.</text>
          </description>
          <type name="uint64"/>
          <units name="bits/s"/>
        </leaf>
        <leaf name="hw-timestamp">
          <description>
            <text>
              If true, get the first timestamp from hardware.
            </text>
          </description>
          <type name="boolean"/>
        </leaf>
        <container name="pcap-files">
          <description>
            <text>
              List of uploaded pcap files. At any moment, only one of them
              is active.
            </text>
          </description>
          <leaf name="active">
            <description>
              <text>
                <h:p>Reference to the number of the active pcap file.</h:p>
                <h:p>No file is active if this leaf is missing.</h:p>
              </text>
            </description>
            <type name="leafref">
              <path value="../pcap-file/number"/>
            </type>
          </leaf>
          <list name="pcap-file">
            <description>
              <text>
                <h:p>URL of the PCAP file with a sequence number.</h:p>
                <h:p>Numbers must always form an increasing sequence.</h:p>
              </text>
            </description>
            <key value="number"/>
            <leaf name="number">
              <type name="uint8">
                <range value="1..max"/>
              </type>
              <must condition="not(. &lt;=
                ../preceding-sibling::pcap-file/number)">
                <error-message>
                  <value>
            	Sequence numbers must be increasing.
                  </value>
                </error-message>
              </must>
            </leaf>
            <leaf name="url">
              <type name="inet:uri"/>
            </leaf>
          </list>
        </container>
        <container name="data">
          <when condition="../enabled = 'true'"/>
          <config value="false"/>
          <leaf name="status">
            <mandatory value="true"/>
            <description>
              <text>
                Operational status of the sender module.
              </text>
            </description>
            <type name="enumeration">
              <enum name="idle"/>
              <enum name="sending"/>
              <enum name="waiting"/>
            </type>
          </leaf>
        </container>
      </container>

      <container name="output-packet-checker">
        <uses name="enabled-switch"/>
      </container>

      <container name="input-packet-checker">
        <uses name="enabled-switch"/>
        <container name="data">
          <when condition="../enabled = 'true'"/>
          <config value="false"/>
          <leaf name="inord">
            <mandatory value="true"/>
            <description>
              <text>Counter of packets arriving in order.</text>
            </description>
            <type name="yang:zero-based-counter64"/>
          </leaf>
          <leaf name="outord">
            <mandatory value="true"/>
            <description>
              <text>Counter of packets arriving out of order.</text>
            </description>
            <type name="yang:zero-based-counter64"/>
          </leaf>
          <leaf name="lost">
            <mandatory value="true"/>
            <description>
              <text>Counter of lost packets.</text>
            </description>
            <type name="yang:zero-based-counter64"/>
          </leaf>
          <leaf name="error">
            <mandatory value="true"/>
            <description>
              <text>Counter of packets with errors.</text>
            </description>
            <type name="yang:zero-based-counter64"/>
          </leaf>
          <leaf name="max-delay">
            <mandatory value="true"/>
            <description>
              <text>Maximum packet delay.</text>
            </description>
            <type name="uint64"/>
            <units name="nanoseconds"/>
          </leaf>
          <leaf name="min-delay">
            <mandatory value="true"/>
            <description>
              <text>Minimum packet delay.</text>
            </description>
            <type name="uint64"/>
            <units name="nanoseconds"/>
          </leaf>
          <leaf name="avg-delay">
            <mandatory value="true"/>
            <description>
              <text>Average packet delay.</text>
            </description>
            <type name="uint64"/>
          </leaf>
          <container name="packet-delays">
            <description>
              <text>
                <h:p>Histogram of observed packet delays.</h:p>
                <h:p>TBD - specify values of histogram parameters.</h:p>
              </text>
            </description>
            <uses name="histogram64"/>
          </container>
        </container>
      </container>

      <container name="blackhole">
        <uses name="enabled-switch"/>
      </container>
      <container name="physical-coding-sublayer">
        <uses name="enabled-switch"/>
        <leaf name="sys-loopback-enabled">
          <description>
            <text>Enable system loopback.</text>
          </description>
          <type name="boolean"/>
        </leaf>
        <leaf name="net-loopback-enabled">
          <description>
            <text>Enable network loopback.</text>
          </description>
          <type name="boolean"/>
        </leaf>
        <leaf name="low-power-enabled">
          <description>
            <text>Enable low power.</text>
          </description>
          <type name="boolean"/>
        </leaf>
        <leaf name="rx-scr-enabled">
          <description>
            <text>Enable RX descrambler.</text>
          </description>
          <type name="boolean"/>
        </leaf>
        <leaf name="tx-scr-enabled">
          <description>
            <text>Enable TX scrambler.</text>
          </description>
          <type name="boolean"/>
        </leaf>
        <container name="data">
          <config value="false"/>
          <leaf name="tx-fault">
            <mandatory value="true"/>
            <description>
              <text>TX fault indicator.</text>
            </description>
            <type name="boolean"/>
          </leaf>
          <leaf name="rx-fault">
            <mandatory value="true"/>
            <description>
              <text>RX fault indicator.</text>
            </description>
            <type name="boolean"/>
          </leaf>
          <leaf name="high-ber">
            <mandatory value="true"/>
            <description>
              <text>High BER indicator</text>
            </description>
            <type name="boolean"/>
          </leaf>
          <leaf name="ber-count">
            <mandatory value="true"/>
            <description>
              <text>BER counter.</text>
            </description>
            <type name="uint8"/>
          </leaf>
          <leaf name="errblk-count">
            <mandatory value="true"/>
            <description>
              <text>Counter of blocks with errors.</text>
            </description>
            <type name="uint8"/>
          </leaf>
          <leaf name="block-lock">
            <mandatory value="true"/>
            <description>
              <text>Block lock indicator.</text>
            </description>
            <type name="boolean"/>
          </leaf>
        </container>
      </container>
   </list>
  </container>

  <!-- RPCs -->

  <rpc name="reset-modules">
    <description>
      <text>
	Reset one or more COMET modules.
      </text>
    </description>
    <input>
      <leaf-list name="submodule">
	<description>
	  <text>Names of the modules.</text>
	</description>
	<type name="enumeration">
	  <enum name="input-packet-checker"/>
	  <enum name="output-packet-checker"/>
	  <enum name="sender"/>
	</type>
      </leaf-list>
    </input>
  </rpc>

  <rpc name="reset-counters">
    <description>
      <text>
	Reset all counters in one or more COMET modules.
      </text>
    </description>
    <input>
      <leaf-list name="submodule">
	<description>
	  <text>Names of the modules.</text>
	</description>
	<type name="enumeration">
	  <enum name="statistics"/>
	  <enum name="input-packet-checker"/>
	  <enum name="output-packet-checker"/>
	  <enum name="physical-coding-sublayer"/>
	</type>
      </leaf-list>
    </input>
  </rpc>
  <rpc name="send-traffic">
    <description>
      <text>Send traffic from active pcap file</text>
    </description>
    <input>
      <leaf name="mode">
      	<description>
	  <text>Mode of sending</text>
	</description>
        <type name="enumeration">
          <enum name="full-speed"/>
          <enum name="user-speed"/>
          <enum name="interval"/>
        </type>
      </leaf>
      <leaf name="interface">
        <description>
          <text>Output interface.</text>
        </description>
        <type name="uint16"/>
      </leaf>
    </input>
  </rpc>
</module>
