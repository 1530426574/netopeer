Harmonogram
==============================================================================
1. V prvni fazi se omezime na vytvoreni sablon pro vypis vsech dostupnych 
   informaci, eventuelne s mozsnosti editace (rozdeleni na konfiguracni a sta-
   vove informace) - bez aplikační logiky.
2. Online editace a zpetny prevod do formatu YANG + odeslani dale ke zpracovani
   => editační logika
3. Vytvareni novych konfiguracnich souboru dle pripravene sablony.

Definice struktury dat 
==============================================================================
Data budou reprezentována např. pomocí vícerozměrného asociativního pole ve 
formě stromové struktury. Pokud možno bych rád zvolil objektově orientovanou 
formu.





******************************************************************************
Popis uzivatelskeho rozhrani
==============================================================================

Vyber dokumentu pro editaci
==============================================================================
Vyber dokumentu pro editaci se ridi dle elementu 'module $name'. Jeden modul 
bude preveden do jednoho "pracovniho souboru, instance", tedy v ramci jedne 
otevrene webove stranky (jednoho okna), bude mozne upravovat pouze tento 
zvoleny soubor.

Pokud bude potreba editovat soubor jiny, bude zde moznost zmeny hlavniho 
editovaneho souboru bud misto dosavadniho, nebo jako novou instanci v ramci
jineho okna (tabu) prohlizece.

Vyber bude realizovan pomoci vyberu z dostupnych modulu pro editaci, pripadne
vytvorenim modulu noveho (novy konfiguracni soubor s defaultnimi parametry).

Modulem rozumíme kořenový element daného stromu, který bude zastřešovat všechna 
další dostupná data a bude obsahovat tyto atributy:
* kind = module
* dataType = container
* name (v tomto případě by se mělo jednat o ID) 
* id = $name (pokud je $name unikátní)
* url = id
* data = array()


Rozdělení dokumentu do jednotlivých sekcí
==============================================================================
Jednotlivé sekce (stránky) se rozdělují dle elementu 'grouping' či 'container'.
Úroveň se řídí dle hloubky zanoření - tedy prvá úroveň znamená hlavní stránku
(sekci), následující elementy pak podsekce (rozdělení ve stylu podmenu). Další
úroveň již bude obsažena v rámci výpisu na stránce (vizuální rozdělení, infor-
mace se vypisují pod sebou).

Speciálním případem sekce se může stát 'augment' - viz. diskuse dále.

Stručně si lze představit strukturu jako:
   Level 1: Horní horizontální menu
   Level 2: Levé menu (podmenu)
   Level 3-inf: Vizuálně rozdělené sekce v rámci stránky

Sekce by měla být identifikována
* kind = section
* dataType = container
* level = {úroveň zanoření}
* url (unikátní hodnota, id)
* name (název zobrazený např. v menu)
* data = array()
- description (informace o dané stránce)


Rozlišení konfigurační / stavové části
==============================================================================
Je vhodné, aby každá konfigurační část měla přiřazenou část stavovou a obrá-
ceně. Jednotlivé sekce mohou být prázdné, je ale nutné, aby byly v dokumentu 
obsaženy.

K rozlišení dojde na úrovní elementu 'grouping' či 'container'. 
Představou je, že každý modul či sekce bude obsahovat právě dvě větve 'state' 
a 'config'. Tyto větve budou obsahovat dále své další potomky a data.

Jako příklad uvedu:
   module module-name
      - section (kind=state, id, name)
         - data, container, section...
      - section (kind=config, id, name)
         - leaf
         - list
         ...

Atributy
* kind = section
* dataType = state/config
* data = array()
* id = {unique id}
* name (název zobrazený např. v menu) 


Zvláštní sekce - Popis dokumentu - sekce Info
==============================================================================
Tato sekce bude obsahovat pouze informační údaje týkající se celého modulu,
tedy typicky elementy, které jsou přímými potomky elementu 'module'.

Atributy
* kind = section
* dataType = info
* id = {unique id}
* name (název zobrazený např. v menu) 
- data = array(revision, description, contact, organization, anyxml...)


******************************************************************************
Popis atributů
==============================================================================

anyxml
==============================================================================
Jelikoz tento element ma ve specifikaci doporuceno pouzivat pouze nekonfigu-
racni data, ma pro nas tento element pouze informativni charakter. Měl by být 
obsažen buď ve stavové části nebo v sekci Info.

Datová část bude ve formátu asociativniho pole:
   anyxml (
      [key] => value, array()...
   )

K výpisu dojte pouze ve formátu klíč - hodnota, případně zanoření.

Atributy
* kind = section
* dataType = xml
* id = {unique id}
* data = array()
* name
- info (description, revision...)

augment
==============================================================================
Rozšiřující element, který umožňuje přidat schéma stromu z externího modulu,
submodulu... Pokud se jedná u využití atributu 'uses', bude zde uvedena refe-
rence (odkaz, objekt pro vygenerování odkazu) na cílovou část kódu.

TODO: rozhodnout, zda se zde mají informace vypisovat, nebo stačí pouze odkaz
na danou sekci.
   - návrh 1: části vlastního modulu zobrazovat (+ odkazovat na místo, kde se
     nachází), na cizí kusy kódu či celé moduly pouze odkazovat (případně nabí-
     dnout náhled dat)
   - návrh 2: vypisovat vše, uvádět odkaz k danému cíli. K tomuto se váže 
     nutnost používat augment jako 

Atributy
* kind = section
* dataType = augment
* isLocal = true/false
* id = {unique id}
* target
* name
- data = array()
- info (description, revision...)


contact
==============================================================================
Atributy
* kind = section
* dataType = contact
* id = {unique id}
description (textová reprezenace)


container
==============================================================================
Patří společně s 'grouping' ke shlukovacím elementům. 

* kind = section
* dataType = state/config
* id = {unique id}
* level = {úroveň zanoření}
* url (unikátní hodnota, id)
* name (název zobrazený např. v menu)
* data = array()
- description (informace o dané stránce)


description
==============================================================================
Atributy
* kind = section
* dataType = description
* id = {unique id}
- name (např. nadpis, label popisku)
- description (textová reprezenace)


deviation
==============================================================================
TODO


extension
==============================================================================
TODO


feature
==============================================================================
TODO

grouping
==============================================================================
Patří společně s 'container' ke shlukovacím elementům. 

* kind = section
* dataType = state/config
* id = {unique id}
* level = {úroveň zanoření}
* url (unikátní hodnota, id)
* name (název zobrazený např. v menu)
* data = array()
- description (informace o dané stránce)

identity
==============================================================================
TODO


import
==============================================================================
Popis podobně jako 'augment'.

TODO


include
==============================================================================
Popis podobně jako 'augment'.

TODO


leaf
==============================================================================
Jedná se o konečnou, dále nedělitelnou informaci = v našem případě kýženou
hodnotu. 

Určení, zda se jedná o stavovou či konfigurační informaci, již máme dané dle
umístění v aktuální větvi (tedy konfigurační či stavové).

Atributy
* kind = leaf
* dataType = {type} 
* id = {unique id}
* name (např. nadpis, label popisku)
* data = array([key] => value...)
- description


leaf-list
==============================================================================
Podobně jako 'leaf'


list
==============================================================================
Slouží ke shlukovaní elementů, podobně jako 'container' či 'grouping'.

Atributy
* kind = section
* dataType = list
* id = {unique id}
* level = {úroveň zanoření}
* name (název zobrazený např. v menu)
* data = array()
- description (informace o dané stránce)


namespace
==============================================================================
Patří pod informační sekci.

Atributy
* kind = section
* dataType = namespace
* id = {unique id}
* value


notification
==============================================================================
Atributy
* kind = section
* dataType = notofication
* id = {unique id}
* name (název zobrazený např. v menu)
* value


organization
==============================================================================
Patří pod informační sekci.

Atributy
* kind = section
* dataType = organization
* id = {unique id}
* value


prefix
==============================================================================
Patří pod informační sekci.

Atributy
* kind = section
* dataType = prefix
* id = {unique id}
* value


reference
==============================================================================
Patří pod informační sekci.

Atributy
* kind = section
* dataType = reference
* id = {unique id}
* value


revision
==============================================================================
Revize obsahuje pole všech revizí, indexovaných dle data

Atributy
* dataType = section
* kind = revision
* id = {unique id}
* data = array([date] => description)

rpc
==============================================================================
TODO


typedef / {type} 
==============================================================================
Odpovida definice dle www.yang-central.org/twiki/bin/view/Main/YangTypesHtml
Nazev vzdy odpovida nazvu v klauzili 'typedef'. Pokud se jedna o typ 'string',
je nutne uvadet take volitelnou polozku 'pattern'. 

Atributy
* dataType = {nazev}
- pattern
- data = array()

Dle zvolého datového typu by mělo obsahovat ještě další atributy (např. min, 
max u range; výčet prvků pro enum)


uses
==============================================================================
Neni nutne nijak vypisovat - jedna se o referenci pro atribut 'grouping'. Tuto
informaci bychom tedy meli mit obsaženu již u atributu 'grouping'.

yang
==============================================================================
TODO




Poznámka:
Tento seznam prozatím neobsahuje naprosto všechny možné elementy, vyskytující 
se v YANGu. Jedná se zatím o odrazový můstek a může se měnit dle potřeby.

