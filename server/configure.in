#
# Copyright (c) 2011 CESNET
#
# LICENSE TERMS
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the Company nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# ALTERNATIVELY, provided that this notice is retained in full, this
# product may be distributed under the terms of the GNU General Public
# License (GPL) version 2 or later, in which case the provisions
# of the GPL apply INSTEAD OF those given above.
#
# This software is provided ``as is'', and any express or implied
# warranties, including, but not limited to, the implied warranties of
# merchantability and fitness for a particular purpose are disclaimed.
# In no event shall the company or contributors be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.
#
# $Id$
#

# Process this file with autoconf to produce a configure script.
AC_INIT([netopeer-server], m4_esyscmd([cut -f1 ./VERSION | tr -d '\n']))

m4_include([m4/ax_pthread.m4])

PACKAGE_VERSION=`cut -f1 ./VERSION | tr -d '\n'`
AC_SUBST(PACKAGE_VERSION)

RELEASE=1
AC_SUBST(RELEASE)

USERNAME=`git config --get user.name`
USERMAIL=`git config --get user.email`
AC_SUBST(USERNAME)
AC_SUBST(USERMAIL)

CONFIGURE_PWD=`pwd`
AC_SUBST(CONFIGURE_PWD)

# Check for pkg-config.
AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test "x$PKG_CONFIG" = "xno"; then
	AC_MSG_ERROR(['pkgconfig' not found.])
fi

# check for Linux distribution
AC_ARG_WITH([distro],
	AC_HELP_STRING([--with-distro=DISTRO],[Compile for specific Linux distribution (RHEL based by default)]),
	DISTRO=`echo $withval | tr A-Z a-z`,
	if test -n "`cat /proc/version | grep 'Red Hat'`"; then
		DISTRO=redhat;
	else		
		DISTRO=`cat /etc/*release | grep ^ID= | sed 's/.*=//'`;
	fi	
)
AC_MSG_CHECKING([for distro])
AC_MSG_RESULT([$DISTRO])
case $DISTRO in
	opensuse | suse | rhel | redhat )
		# ok, supported distros
		;;
	* )
		# unknown
		AC_MSG_WARN([Unsupported Linux distro \"$DISTRO\", only RHEL and SUSE are fully supported.])
		;;
esac

CFLAGS="-Wall -Wextra"
# --enable-debug
AC_ARG_ENABLE([debug],
	AC_HELP_STRING([--enable-debug],[Compile with debug options]),
	CFLAGS="$CFLAGS -g -O0",
	CFLAGS="$CFLAGS -O3"
)

# Add --with-group parameter
AC_MSG_CHECKING([for group])
AC_ARG_WITH([group],
	AC_HELP_STRING([--with-group=GROUP],[Group of users with enabled access to Netopeer server (root by default)]),
	GROUP="$with_group",
	GROUP="root"
)
AC_MSG_RESULT([$GROUP])

AC_MSG_CHECKING([for user])
AC_ARG_WITH([user],
	AC_HELP_STRING([--with-user=USER],[User to be allowed to start Netopeer server (root by default)]),
	USER="$with_user",
	USER="root"
)
AC_MSG_RESULT([$USER])

AC_SUBST(USER)
AC_SUBST(GROUP)

AC_ARG_ENABLE([dbus],
	AC_HELP_STRING([--disable-dbus], [Use UNIX sockets instead of DBus.]),
	if test "$enableval" = "no"; then
		dbus="no"
		CPPFLAGS="$CPPFLAGS -DDISABLE_DBUS"
	else
		dbus="yes"
	fi
	,
	# use DBus by default
	dbus="yes"
)
if test "$dbus" = "yes"; then
	HDRS_COMM="src/netopeer_dbus.h src/server_operations_dbus.h"
	SRCS_COMM="src/netopeer_dbus.c src/server_operations_dbus.c"
	HDRS_AGENT_COMM="comm_dbus.h"
	SRCS_AGENT_COMM="comm_dbus.c"
else
	HDRS_AGENT_COMM="comm_socket.h"
	SRCS_AGENT_COMM="comm_socket.c"
fi
	
############################ Check for programs ################################

# in case of cross-compilation, try to gues cross-compiler if not set
if test "x$target" != "x$host" -a -z "`echo $CC | grep -e '-gcc'`";
then
  AC_MSG_CHECKING(for cross-compiler)

  which ${program_prefix}gcc >/dev/null 2>&1 && CC=${program_prefix}gcc
  which ${target_cpu}-${target_os}-gcc >/dev/null 2>&1 \
  && CC=${target_cpu}-${target-os}-gcc
  which ${target_cpu}-${target_vendor}-${target_os}-gcc >/dev/null 2>&1 \
  && CC=${target_cpu}-${target_vendor}-${target_os}-gcc

  AC_MSG_RESULT($CC)
fi

# Check for architecture, only x86 and x86_64 are supported
if test -z "$target_cpu";
then
	AC_CHECK_PROG([UNAME], [uname], [yes], [no])
	if test "$UNAME" = "no"; then
		AC_MSG_ERROR(["uname not found!"])
	fi
	target_cpu=`uname -m`
fi
AC_MSG_CHECKING([for host architecture])
case $target_cpu in
    i?86 )
		AC_MSG_RESULT($target_cpu)
		;;
    x86_64 )
		libdir='${prefix}/lib64'
		AC_MSG_RESULT($target_cpu)
        ;;
    * )
        AC_MSG_ERROR([unsupported architecture $target_cpu])
        ;;
esac


# Check for doxygen
AC_CHECK_PROG(DOXYGEN, doxygen, doxygen)

# Check for rpmbuil
AC_CHECK_PROG(RPMBUILD, rpmbuild, rpmbuild)

# Check for standard programs
AC_PROG_CC(clang llvm-gcc gcc)
AC_PROG_INSTALL

############################ Check for libraries ###############################
export PKG_CONFIG_PATH=/usr/local/${libdir##*/}/pkgconfig:$PKG_CONFIG_PATH

### LibXML2 ###
# Test whether Libxml2 exist
if test -n "$with_libxml2_path" ; then
	LIBS_LIB_XML="-lxml2"
	LDFLAGS_LIB_XML="-L$with_libxml2_path/lib"
else
	AC_CHECK_LIB([xml2], [main],
		[ LIBS_LIB_XML="-lxml2"],
		[ echo "Libxml2 not found - exiting! (use --with-libxml2-path=DIR if you has it in some other directory)" ; exit 1 ])
fi
AC_CHECK_PROG([XML2_CONFIG], [xml2-config], ["yes"], ["no"])
if test "$XML2_CONFIG" = "no"; then
	echo "xml2-config not found - exiting!"
	exit 1
fi
CPPFLAGS="$CPPFLAGS `xml2-config --cflags`"
LIBS="$LIBS $LIBS_LIB_XML"
LDFLAGS="$LDFLAGS $LDFLAGS_LIB_XML"
BUILDREQS="$BUILDREQS libxml2-devel"
REQS="$REQS libxml2"

# libnetconf
AC_ARG_WITH([libnetconf],
	AC_HELP_STRING([--with-libnetconf=PATH],[Set explicit installation prefix to the libnetconf library]),
	[CPPFLAGS="-I$withval/include/ $CPPFLAGS"
	LIBS="-L$withval/lib/ -Wl,-rpath,$withval/lib $LIBS"
	CONFIGURE_PARAMS="$CONFIGURE_PARAMS --with-libnetconf=$withval"
	],[
	# get info from pkg-config about installed package
	PKG_CHECK_MODULES(LIBNETCONF, libnetconf)
	CPPFLAGS="$LIBNETCONF_CFLAGS $CPPFLAGS"
	LIBS="$LIBNETCONF_LIBS $LIBS"]
)
AC_SEARCH_LIBS([nc_init], [netconf], [], AC_MSG_ERROR([libnetconf not found.]))
AC_SEARCH_LIBS([ncntf_dispatch_receive], [netconf], [], AC_MSG_ERROR([libnetconf does not support notifications.]))
REQS="$REQS libnetconf"
BUILDREQS="$BUILDREQS libnetconf-devel"

# libdbus
if test "$dbus" = "yes"; then

	AGENT_SRCS_COMM="src/agent_comm_dbus.c"
	SERVER_SRCS_COMM="src/server_comm_dbus.c"
	AGENT_HDRS_COMM="src/netopeer_dbus.h"
	SERVER_HDRS_COMM="src/netopeer-dbus.h"

	# - library
	AC_ARG_WITH([libdbus],
		AC_HELP_STRING([--with-libdbus=PATH],[Set explicit installation prefix to the libdbus library]),
		[CPPFLAGS="-I$withval/include/ $CPPFLAGS"
		LIBS="-L$withval/lib/ -Wl,-rpath,$withval/lib $LIBS"
		CONFIGURE_PARAMS="$CONFIGURE_PARAMS --with-libdbus=$withval"
		],[
		# get info from pkg-config about installed package
		PKG_CHECK_MODULES(LIBDBUS, [dbus-1 >= 1.0.0])
		CPPFLAGS="$LIBDBUS_CFLAGS $CPPFLAGS"
		LIBS="$LIBDBUS_LIBS $LIBS"]
	)
	AC_SEARCH_LIBS([dbus_bus_get], [dbus-1], [], AC_MSG_ERROR([libdbus not found.]))

	# - configuration directory
	AC_ARG_WITH([dbus-config-dir],
		AC_HELP_STRING([--with-dbus-config-dir=DIR],[path to D-Bus config files (/etc/dbus-1/system.d/ by default)]),
		DBUSCONF="$withval"
		,
		DBUSCONF="/etc/dbus-1/system.d/"
	)
	AC_MSG_CHECKING([for existence of D-Bus configuration directory $DBUSCONF])
	if test ! -d "$DBUSCONF"; then
		AC_MSG_RESULT([missing])
		AC_MSG_ERROR([Wrong D-Bus configuration path, $DBUSCONF does not exist.])
	else
		AC_MSG_RESULT([ok])
		AC_SUBST(DBUSCONF)
	fi

	# - services directory
	AC_ARG_WITH([dbus-services],
		AC_HELP_STRING([--with-dbus-services@<:@=DIR@:>@],
			[path to D-Bus services directory (/usr/share/dbus-1/system-services/ by default), \
			if this parameter is not used, service file for netopeer-server is not installed!]),
			if test "$withval" = "yes"; then
				DBUSSERVICES="/usr/share/dbus-1/system-services/"
			else
				DBUSSERVICES="$withval"
			fi
			AC_MSG_CHECKING([for existence of D-Bus services directory $DBUSSERVICES])
			if test ! -d "$DBUSSERVICES"; then
				AC_MSG_RESULT([missing])
				AC_MSG_ERROR([Wrong D-Bus service path, $DBUSSERVICES does not exist.])
			else
				AC_MSG_RESULT([ok])
				AC_SUBST(DBUSSERVICES)
			fi
			CONFIGURE_PARAMS="$CONFIGURE_PARAMS --with-dbus-services=$DBUSSERVICES"
			,
			# do not install DBus service file anywhere
			DBUSSERVICES=""
	)

	# - spec file dependencies
	case $DISTRO in
		suse )
			BUILDREQS="$BUILDREQS dbus-1-devel >= 1.0.0"
			REQS="$REQS dbus-1 >= 1.0.0"
			;;
		* )
			# RH distros
			BUILDREQS="$BUILDREQS dbus-devel >= 1.0.0"
			REQS="$REQS dbus >= 1.0.0"
			;;
	esac
else
	AGENT_SRCS_COMM="src/agent_comm_socket.c"
	SERVER_SRCS_COMM="src/server_comm_socket.c"
	AGENT_HDRS_COMM="src/netopeer_socket.h"
	SERVER_HDRS_COMM="src/netopeer-socket.h"
fi

SERVER_LIBS=$LIBS

# pthread
AX_PTHREAD([
	AGENT_LIBS="$PTHREAD_LIBS $LIBS"
	CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
	CC="$PTHREAD_CC"],
	AC_MSG_ERROR([Missing POSIX threads support.])
)

###################### Check for configure parameters ##########################

######################### Checks for header files ##############################
AC_CHECK_HEADERS([stdlib.h string.h sys/time.h unistd.h])
AC_CHECK_HEADERS([dbus/dbus.h libnetconf_xml.h libxml/tree.h])

######## Checks for typedefs, structures, and compiler characteristics #########
AC_TYPE_INT32_T
AC_TYPE_UINT32_T

######################## Checks for library functions ##########################
AC_FUNC_MALLOC
AC_CHECK_FUNCS([select strdup strerror])

############################### Set output #####################################
AC_SUBST(BUILDREQS)
AC_SUBST(REQS)
AC_SUBST(CONFIGURE_PARAMS)
AC_SUBST(DISTRO)
AC_SUBST(AGENT_SRCS_COMM)
AC_SUBST(SERVER_SRCS_COMM)
AC_SUBST(AGENT_HDRS_COMM)
AC_SUBST(SERVER_HDRS_COMM)
AC_SUBST(SERVER_LIBS)
AC_SUBST(AGENT_LIBS)

AC_SUBST(DOXYGEN)
if test -z "$DOXYGEN"; then
	AC_MSG_WARN([Due to missing doxygen you will not able to generate Doxygen documentation.])
fi

AC_SUBST(RPMBUILD)
if test -z "$RPMBUILD"; then
	AC_MSG_WARN([Due to missing rpmbuild you will not able to generate RPM package.])
fi

AC_CONFIG_FILES(Makefile)
AC_CONFIG_FILES(manager/Makefile)
AC_CONFIG_FILES(config/org.liberouter.netopeer.conf)
AC_CONFIG_FILES(config/org.liberouter.netopeer.server.service)
AC_CONFIG_FILES(netopeer-server.spec)
AC_CONFIG_FILES(netopeer.rc)
AC_CONFIG_FILES(src/netopeer_socket.h)

AC_OUTPUT
